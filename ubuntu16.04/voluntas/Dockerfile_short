# ==========================================
# Ubuntu 16.04 Voluntas Dockerfile
# ==========================================

#
# Cleaned Dockerfile
# Optimized to only apt-date and clean only once
#

# Import previous building block image mysql_5.7
#
FROM pvln/ubuntu16.04-lvl1-mysql_5.7:1.0

LABEL version="1.0" \
      maintainer="Pierre Veelen <pierre@pvln.nl>"

# ==========================================
# START OF INSTALLING VOLUNTAS
# ==========================================
#
# Creating SSL certificate for website as site runs on HTTPS
#
# Inspiration: https://www.digitalocean.com/community/tutorials/how-to-create-a-self-signed-ssl-certificate-for-apache-in-ubuntu-16-04
#

# Create a self-signed key and certificate pair with OpenSSL
RUN sudo openssl req \
     -x509 \
	 -nodes \
	 -days 365 \
	 -newkey rsa:2048 \
     -keyout /etc/ssl/private/apache-selfsigned.key \
	 -out /etc/ssl/certs/apache-selfsigned.crt \
#     -subj "/C=NL/ST=Limburg/L=Posterholt/O=pvln/OU=private/CN=voluntas.nl"
     -subj "/C=NL/ST=Limburg/L=Posterholt/O=pvln/OU=private/CN=192.168.2.11"

# Create a strong Diffie-Hellman group, which is used in negotiating Perfect Forward Secrecy with clients.
#
# should also be enabled in ssl-params.conf file
#
#RUN sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048

# Update the default apache site with the ssl config we created.
#
ADD ./conf/ssl-params.conf /etc/apache2/conf-available/ssl-params.conf
ADD ./conf/voluntas-ssl.conf /etc/apache2/sites-available/voluntas-ssl.conf

#######
#
# TODO: copy config file to /etc/apache2/sites-available/ and then activate it with site enable command
#       and also disable the default site
#       CHANGE ALSO IN APACHE2 CONFIG FILES  
#
#
######
# Set redirection of HTTP to HTTPS
ADD ./conf/voluntas-config.conf /etc/apache2/sites-enabled/000-default.conf

# Enable mod_ssl, the Apache SSL module, 
# and mod_headers, needed by some of the settings in our SSL snippet
#
RUN sudo a2enmod ssl
RUN sudo a2enmod headers

# Enable SSL Virtual Host
#
RUN sudo a2ensite voluntas-ssl

# enable ssl-params.conf file, to read in the values we set
#
RUN sudo a2enconf ssl-params

# reset ownership of website files
#
#RUN sudo chown -Rf ${APACHE_RUN_USER}:${APACHE_RUN_GROUP} /var/www/html

# ==========================================
# END OF INSTALLING VOLUNTAS
# ==========================================

# ==========================================
# START OF PORTS AND VOLUMES
# ==========================================

# Expose apache2 on port 80 and 443 of the container
#
# HTTP traffic
EXPOSE 80

# HTTPS traffic
EXPOSE 443

# Expose mysql on port 3306 of the container
#
EXPOSE 3306

# Mountable datafolder path(s) within the container
#
# A key point to be aware of here is that anything after the VOLUME instruction
# in a Dockerfile will not be able to make changes to that volume
#

# Volumes for apache2
#
VOLUME /var/www/html
VOLUME /var/log/apache2

# Volume for MySQL
#
VOLUME /var/lib/mysql

# ==========================================
# END OF PORTS AND VOLUMES
# ==========================================

# ==========================================
# ENTRYPOINT & CMD
# ==========================================

#
# Inspiration: http://goinbigdata.com/docker-run-vs-cmd-vs-entrypoint/
#
# Prefer ENTRYPOINT to CMD when building executable Docker image and you need a command always to be executed.
# Additionally use CMD if you need to provide extra default arguments that could be overwritten from command line when docker container runs.
# Choose CMD if you need to provide a default command and/or arguments that can be overwritten from command line when docker container runs.
#

# Cancel pre-defined start-up instruction and allow us to use our own.
#
ENTRYPOINT []

ADD ./entrypoint.sh /usr/local/bin/
ENTRYPOINT ["/bin/bash","entrypoint.sh"]

CMD ["mysqld"]
